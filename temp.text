import React from 'react'
import { Link } from 'react-router-dom'
import { useDispatch, useSelector } from 'react-redux'
import { logout } from '../actions/userAction'
import { useNavigate } from 'react-router-dom'
import { Popover } from '@headlessui/react'

const Header = () => {
  const navigate = useNavigate()
  const userLogin = useSelector((state) => state.userLogin)
  const { userInfo } = userLogin

  const dispatch = useDispatch()

  const logoutHandler = () => {
    dispatch(logout())
    navigate('/login')
  }

  return (
    <header>
      <nav>
        {userInfo ? (
          <>
            <Popover className='relative bg-white '>
              <div className='max-w-7xl mx-auto px-4 sm:px-6'>
                <div className='flex justify-between items-center border-b-2 border-gray-100 py-5 md:justify-start md:space-x-10'>
                  <div className=' md:flex md:flex-1 lg:w-0'>
                    <Link
                      to='/'
                      className='whitespace-nowrap font-medium text-gray-500 flex hover:text-gray-900 text-2xl'>
                      <svg
                        xmlns='http://www.w3.org/2000/svg'
                        className='w-7 mx-2'
                        fill='none'
                        viewBox='0 0 24 24'
                        stroke='currentColor'
                        strokeWidth={2}>
                        <path
                          strokeLinecap='round'
                          strokeLinejoin='round'
                          d='M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6'
                        />
                      </svg>
                      HOME
                    </Link>
                  </div>

                  <div className='pl-28  md:flex md:flex-1 lg:w-0'>
                    <h2 className='font-medium text-2xl text-gray-500'>
                      Welcome {userInfo.name}
                    </h2>
                  </div>

                  <div className=' md:flex items-center justify-end md:flex-1 lg:w-0'>
                    <button
                      onClick={logoutHandler}
                      className='ml-8 whitespace-nowrap inline-flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-indigo-600 hover:bg-indigo-700'>
                      <svg
                        xmlns='http://www.w3.org/2000/svg'
                        className='w-6 mr-1'
                        fill='none'
                        viewBox='0 0 24 24'
                        stroke='currentColor'
                        strokeWidth={2}>
                        <path
                          strokeLinecap='round'
                          strokeLinejoin='round'
                          d='M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1'
                        />
                      </svg>
                      Logout
                    </button>
                  </div>
                </div>
              </div>
            </Popover>
          </>
        ) : (
          <>
            <Popover className='relative bg-white '>
              <div className='max-w-7xl mx-auto px-4 sm:px-6'>
                <div className='flex justify-between items-center border-b-2 border-gray-100 py-6 md:justify-start md:space-x-10'>
                  <div className='flex flex-1 lg:w-0'>
                    <Link
                      to='/'
                      className='whitespace-nowrap font-medium text-gray-500 flex hover:text-gray-900 text-2xl'>
                      <svg
                        xmlns='http://www.w3.org/2000/svg'
                        className='w-7 mx-2'
                        fill='none'
                        viewBox='0 0 24 24'
                        stroke='currentColor'
                        strokeWidth={2}>
                        <path
                          strokeLinecap='round'
                          strokeLinejoin='round'
                          d='M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6'
                        />
                      </svg>
                      HOME
                    </Link>
                  </div>
                  <div className='hidden md:flex items-center justify-end md:flex-1 lg:w-0'>
                    <Link
                      to='/login'
                      className='whitespace-nowrap flex text-base font-medium text-gray-500 hover:text-gray-900'>
                      <svg
                        xmlns='http://www.w3.org/2000/svg'
                        className='h-6 w-6 mr-1'
                        fill='none'
                        viewBox='0 0 24 24'
                        stroke='currentColor'
                        strokeWidth={2}>
                        <path
                          strokeLinecap='round'
                          strokeLinejoin='round'
                          d='M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1'
                        />
                      </svg>
                      Login
                    </Link>
                    <Link
                      to='/register'
                      className='ml-8 whitespace-nowrap inline-flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-indigo-600 hover:bg-indigo-700'>
                      <svg
                        xmlns='http://www.w3.org/2000/svg'
                        className='w-5 mr-1'
                        fill='none'
                        viewBox='0 0 24 24'
                        stroke='currentColor'
                        strokeWidth={2}>
                        <path
                          strokeLinecap='round'
                          strokeLinejoin='round'
                          d='M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z'
                        />
                      </svg>
                      Register
                    </Link>
                  </div>
                </div>
              </div>
            </Popover>
          </>
        )}
      </nav>
    </header>
  )
}

export default Header




import React from 'react'
import { Link } from 'react-router-dom'
import { useDispatch, useSelector } from 'react-redux'
import { logout } from '../actions/userAction'
import { useNavigate } from 'react-router-dom'
import { Popover } from '@headlessui/react'

const Header = () => {
  const navigate = useNavigate()
  const userLogin = useSelector((state) => state.userLogin)
  const { userInfo } = userLogin

  const dispatch = useDispatch()

  const logoutHandler = () => {
    dispatch(logout())
    navigate('/login')
  }

  return (
    <header>
      <nav>
        {userInfo ? (
          <>
            <Popover className='relative bg-white '>
              <div className='max-w-7xl mx-auto px-4 sm:px-6'>
                <div className='flex justify-between items-center border-b-2 border-gray-100 py-5 md:justify-start md:space-x-10'>
                  <div className='flex flex-1 lg:w-0'>
                    <Link
                      to='/'
                      className='whitespace-nowrap font-medium text-gray-500 flex hover:text-gray-900 text-2xl'>
                      <svg
                        xmlns='http://www.w3.org/2000/svg'
                        className='w-7 mx-2'
                        fill='none'
                        viewBox='0 0 24 24'
                        stroke='currentColor'
                        strokeWidth={2}>
                        <path
                          strokeLinecap='round'
                          strokeLinejoin='round'
                          d='M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6'
                        />
                      </svg>
                      HOME
                    </Link>
                  </div>

                  <div className='pl-28 flex flex-1 lg:w-0'>
                    <h2 className='font-medium text-2xl text-gray-500'>
                      Welcome {userInfo.name}
                    </h2>
                  </div>

                  <div className='flex items-center justify-end flex-1 lg:w-0'>
                    <button
                      onClick={logoutHandler}
                      className='ml-8 whitespace-nowrap inline-flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-indigo-600 hover:bg-indigo-700'>
                      <svg
                        xmlns='http://www.w3.org/2000/svg'
                        className='w-6 mr-1'
                        fill='none'
                        viewBox='0 0 24 24'
                        stroke='currentColor'
                        strokeWidth={2}>
                        <path
                          strokeLinecap='round'
                          strokeLinejoin='round'
                          d='M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1'
                        />
                      </svg>
                      Logout
                    </button>
                  </div>
                </div>
              </div>
            </Popover>
          </>
        ) : (
          <>
            <Popover className='relative bg-white '>
              <div className='max-w-7xl mx-auto px-4 sm:px-6'>
                <div className='flex justify-between items-center border-b-2 border-gray-100 py-6 md:justify-start md:space-x-10'>
                  <div className='flex flex-1 lg:w-0'>
                    <Link
                      to='/'
                      className='whitespace-nowrap font-medium text-gray-500 flex hover:text-gray-900 text-2xl'>
                      <svg
                        xmlns='http://www.w3.org/2000/svg'
                        className='w-7 mx-2'
                        fill='none'
                        viewBox='0 0 24 24'
                        stroke='currentColor'
                        strokeWidth={2}>
                        <path
                          strokeLinecap='round'
                          strokeLinejoin='round'
                          d='M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6'
                        />
                      </svg>
                      HOME
                    </Link>
                  </div>
                  <div className='flex items-center justify-end flex-1 lg:w-0'>
                    <Link
                      to='/login'
                      className='whitespace-nowrap flex text-base font-medium text-gray-500 hover:text-gray-900'>
                      <svg
                        xmlns='http://www.w3.org/2000/svg'
                        className='h-6 w-6 mr-1'
                        fill='none'
                        viewBox='0 0 24 24'
                        stroke='currentColor'
                        strokeWidth={2}>
                        <path
                          strokeLinecap='round'
                          strokeLinejoin='round'
                          d='M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1'
                        />
                      </svg>
                      Login
                    </Link>
                    <Link
                      to='/register'
                      className='ml-8 whitespace-nowrap inline-flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-indigo-600 hover:bg-indigo-700'>
                      <svg
                        xmlns='http://www.w3.org/2000/svg'
                        className='w-5 mr-1'
                        fill='none'
                        viewBox='0 0 24 24'
                        stroke='currentColor'
                        strokeWidth={2}>
                        <path
                          strokeLinecap='round'
                          strokeLinejoin='round'
                          d='M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z'
                        />
                      </svg>
                      Register
                    </Link>
                  </div>
                </div>
              </div>
            </Popover>
          </>
        )}
      </nav>
    </header>
  )
}

export default Header


Header update 
import React, { useState, useEffect } from 'react'
import { useNavigate } from 'react-router-dom'
import { useDispatch, useSelector } from 'react-redux'
import { login } from '../actions/userAction'

const LoginScreen = () => {
  const navigate = useNavigate()
  const [email, setEmail] = useState('')
  const [password, setPassword] = useState('')

  const dispatch = useDispatch()

  const userLogin = useSelector((state) => state.userLogin)
  const { loading, error, userInfo } = userLogin

  useEffect(() => {
    if (userInfo) {
      navigate('/')
    }
  }, [navigate, userInfo])

  const submitHandler = () => {
    dispatch(login(email, password))
    navigate('/')
  }

  const handleButtonClick = () => {
    navigate('/register')
  }
  return (
    <div className='min-h-screen bg-gray-100 text-gray-800 antialiased px-4 py-6 flex  justify-center sm:py-12'>
      <div className='relative py-3 sm:max-w-xl mx-auto text-center'>
        <span className='text-2xl font-light'>Login to your account</span>
        {error && <h3>{error}</h3>}
        {loading && <h2>LOADING..</h2>}
        <div className='relative mt-4 bg-white shadow-md sm:rounded-lg text-left'>
          <div className='h-2 bg-indigo-400 rounded-t-md'></div>
          <div className='py-6 px-8'>
            <label className='block font-semibold'>Email</label>
            <input
              type='text'
              placeholder='Email'
              className=' border w-full h-5 px-3 py-5 mt-2 hover:outline-none focus:outline-none focus:ring-1 focus:ring-indigo-600 rounded-md'
              onChange={(e) => setEmail(e.target.value)}
            />
            <label className='block mt-3 font-semibold'>Password</label>
            <input
              type='password'
              placeholder='Password'
              className=' border w-full h-5 px-3 py-5 mt-2 hover:outline-none focus:outline-none focus:ring-1 focus:ring-indigo-600 rounded-md'
              onChange={(e) => setPassword(e.target.value)}
            />
            <div className='flex justify-between items-baseline'>
              <button
                onClick={submitHandler}
                className=' flex mt-4 bg-indigo-500 text-white py-2 px-6 rounded-lg'>
                <svg
                  xmlns='http://www.w3.org/2000/svg'
                  className='h-6 w-6 mr-1'
                  fill='none'
                  viewBox='0 0 24 24'
                  stroke='currentColor'
                  strokeWidth={2}>
                  <path
                    strokeLinecap='round'
                    strokeLinejoin='round'
                    d='M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1'
                  />
                </svg>
                Login
              </button>
            </div>
          </div>
        </div>

        <div className='pt-2 mt-2'>
          <span className='text-2xl font-light'>Don't have an account? </span>
          <br />
          <button
            onClick={handleButtonClick}
            className='ml-8 mt-2 whitespace-nowrap inline-flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-indigo-600 hover:bg-indigo-700'>
            <svg
              xmlns='http://www.w3.org/2000/svg'
              className='w-5 mr-1'
              fill='none'
              viewBox='0 0 24 24'
              stroke='currentColor'
              strokeWidth={2}>
              <path
                strokeLinecap='round'
                strokeLinejoin='round'
                d='M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z'
              />
            </svg>
            Register
          </button>
        </div>
      </div>
    </div>
  )
}

export default LoginScreen



Header.js file old
import React from 'react'
import { Link } from 'react-router-dom'
import { useDispatch, useSelector } from 'react-redux'
import { logout } from '../actions/userAction'
import { useNavigate } from 'react-router-dom'
import { Popover } from '@headlessui/react'

const Header = () => {
  const navigate = useNavigate()
  const userLogin = useSelector((state) => state.userLogin)
  const { userInfo } = userLogin

  const dispatch = useDispatch()

  const logoutHandler = () => {
    dispatch(logout())
    navigate('/login')
  }

  return (
    <header>
      <nav>
        {userInfo ? (
          <>
            <Popover className='relative bg-white '>
              <div className='max-w-7xl mx-auto px-4 sm:px-6'>
                <div className='flex justify-between items-center border-b-2 border-gray-100 py-5 md:justify-start md:space-x-10'>
                  <div className='flex flex-1 lg:w-0'>
                    <Link
                      to='/'
                      className='whitespace-nowrap font-medium text-gray-500 flex hover:text-gray-900 text-2xl'>
                      <svg
                        xmlns='http://www.w3.org/2000/svg'
                        className='w-7 mx-2'
                        fill='none'
                        viewBox='0 0 24 24'
                        stroke='currentColor'
                        strokeWidth={2}>
                        <path
                          strokeLinecap='round'
                          strokeLinejoin='round'
                          d='M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6'
                        />
                      </svg>
                      HOME
                    </Link>
                  </div>

                  <div className='flex flex-1 justify-center lg:w-0'>
                    <h2 className='font-medium text-2xl text-gray-500'>
                      Welcome {userInfo.name}
                    </h2>
                  </div>

                  <div className='flex items-center justify-end flex-1 lg:w-0'>
                    <button
                      onClick={logoutHandler}
                      className='ml-8 whitespace-nowrap inline-flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-indigo-600 hover:bg-indigo-700'>
                      <svg
                        xmlns='http://www.w3.org/2000/svg'
                        className='w-6 mr-1'
                        fill='none'
                        viewBox='0 0 24 24'
                        stroke='currentColor'
                        strokeWidth={2}>
                        <path
                          strokeLinecap='round'
                          strokeLinejoin='round'
                          d='M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1'
                        />
                      </svg>
                      Logout
                    </button>
                  </div>
                </div>
              </div>
            </Popover>
          </>
        ) : (
          <>
            <Popover className='relative bg-white '>
              <div className='max-w-7xl mx-auto px-4 sm:px-6'>
                <div className='flex justify-between items-center border-b-2 border-gray-100 py-6 md:justify-start md:space-x-10'>
                  <div className='flex flex-1 lg:w-0'>
                    <Link
                      to='/'
                      className='whitespace-nowrap font-medium text-gray-500 flex hover:text-gray-900 text-2xl'>
                      <svg
                        xmlns='http://www.w3.org/2000/svg'
                        className='w-7 mx-2'
                        fill='none'
                        viewBox='0 0 24 24'
                        stroke='currentColor'
                        strokeWidth={2}>
                        <path
                          strokeLinecap='round'
                          strokeLinejoin='round'
                          d='M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6'
                        />
                      </svg>
                      HOME
                    </Link>
                  </div>
                  <div className='flex items-center justify-end flex-1 lg:w-0'>
                    <Link
                      to='/login'
                      className='whitespace-nowrap flex text-base font-medium text-gray-500 hover:text-gray-900'>
                      <svg
                        xmlns='http://www.w3.org/2000/svg'
                        className='h-6 w-6 mr-1'
                        fill='none'
                        viewBox='0 0 24 24'
                        stroke='currentColor'
                        strokeWidth={2}>
                        <path
                          strokeLinecap='round'
                          strokeLinejoin='round'
                          d='M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1'
                        />
                      </svg>
                      Login
                    </Link>
                    <Link
                      to='/register'
                      className='ml-8 whitespace-nowrap inline-flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-indigo-600 hover:bg-indigo-700'>
                      <svg
                        xmlns='http://www.w3.org/2000/svg'
                        className='w-5 mr-1'
                        fill='none'
                        viewBox='0 0 24 24'
                        stroke='currentColor'
                        strokeWidth={2}>
                        <path
                          strokeLinecap='round'
                          strokeLinejoin='round'
                          d='M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z'
                        />
                      </svg>
                      Register
                    </Link>
                  </div>
                </div>
              </div>
            </Popover>
          </>
        )}
      </nav>
    </header>
  )
}

export default Header



homescreen.js before login clickable
import React, { useState } from 'react'
import Todo from '../components/Todo'
import { useSelector, useDispatch } from 'react-redux'
import { userListTodos, newTodoAction } from '../actions/todoAction.js'

const HomeScreen = () => {
  const [newTodo, setNewTodo] = useState('')

  const dispatch = useDispatch()

  const { userInfo } = useSelector((state) => state.userLogin)

  const todoUserList = useSelector((state) => state.todoUserList)
  const { loading, error, userTodos } = todoUserList

  const handleClick = (e) => {
    e.preventDefault()
    dispatch(userListTodos(userInfo._id))
  }

  const handleNewTodo = (e) => {
    e.preventDefault()
    dispatch(newTodoAction({ userId: userInfo._id, todoText: newTodo }))
    dispatch(userListTodos(userInfo._id))
    dispatch(userListTodos(userInfo._id))
  }

  return (
    <div className=' min-h-screen bg-gray-100'>
      <div
        style={{ padding: '10px' }}
        className=' bg-gray-100 text-gray-800 antialiased px-4  flex  justify-center sm:py-12'>
        <div className='relative sm:max-w-xl mx-auto text-center'>
          {userInfo && (
            <div>
              <div className='flex justify-center items-baseline'>
                <button
                  onClick={handleClick}
                  className=' flex border-transparent shadow-sm hover:bg-indigo-700 mt-4 bg-indigo-500 text-white py-2 px-6 rounded-md'>
                  Show My Todos
                </button>
              </div>
            </div>
          )}

          <div className='h-1 bg-indigo-700 mt-2 rounded'></div>

          {!userInfo && <h1 >Login To Create and See your To-do's</h1>}
          <span className='h-1 bg-indigo-700 mt-2 rounded'>.................................................................................</span>
        </div>
      </div>
      {loading ? (
        <h2>Loading...</h2>
      ) : error ? (
        <h3>{error}</h3>
      ) : userTodos ? (
        <>
          <div className='pb-3 px-8 '>
            <input
              placeholder='Enter New Todo'
              type='text'
              id='newTodo'
              name='newTodo'
              onChange={(e) => {
                setNewTodo(e.target.value)
              }}
              className=' border  h-5 px-3 py-5 mt-2 hover:outline-none focus:outline-none focus:ring-1 focus:ring-indigo-600 rounded-l-md'
            />
            <button
              onClick={handleNewTodo}
              type='submit'
              className='mt-3 ml-1 bg-indigo-500 text-white h-10 w-20 rounded-r-md'>
              Add Todo
            </button>
          </div>

          {userTodos.map((todo) => (
            <span key={todo._id}>
              <Todo todo={todo} />
              <br />
            </span>
          ))}
        </>
      ) : (
        <></>
      )}
    </div>
  )
}

export default HomeScreen


headerscreen.js before hidding home text in responsize devices
import React from 'react'
import { Link, useLocation } from 'react-router-dom'
import { useDispatch, useSelector } from 'react-redux'
import { logout } from '../actions/userAction'
import { useNavigate } from 'react-router-dom'
import { Popover } from '@headlessui/react'

const Header = () => {
  const navigate = useNavigate()
  const location = useLocation() // get the current path
  const userLogin = useSelector((state) => state.userLogin)
  const { userInfo } = userLogin

  const dispatch = useDispatch()

  const logoutHandler = () => {
    dispatch(logout())
    navigate('/login')
  }

  const isLoginOrRegisterPage = location.pathname === '/login' || location.pathname === '/register';

  return (
    <header>
      <nav>
        {userInfo ? (
          <>
            <Popover className='relative bg-white '>
              <div className='max-w-7xl mx-auto px-4 sm:px-6'>
                <div className='flex justify-between items-center border-b-2 border-gray-100 py-5 md:justify-start md:space-x-10'>
                  <div className='flex flex-1 lg:w-0'>
                    <Link
                      to='/'
                      className='whitespace-nowrap font-medium text-gray-500 flex hover:text-gray-900 text-2xl'>
                      <svg
                        xmlns='http://www.w3.org/2000/svg'
                        className='w-7 mx-2'
                        fill='none'
                        viewBox='0 0 24 24'
                        stroke='currentColor'
                        strokeWidth={2}>
                        <path
                          strokeLinecap='round'
                          strokeLinejoin='round'
                          d='M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6'
                        />
                      </svg>
                      HOME
                    </Link>
                  </div>

                  <div className='flex flex-1 justify-center lg:w-0'>
                    <h2 className='font-medium text-2xl text-gray-500'>
                      Welcome {userInfo.name}
                    </h2>
                  </div>

                  <div className='flex items-center justify-end flex-1 lg:w-0'>
                    <button
                      onClick={logoutHandler}
                      className='ml-8 whitespace-nowrap inline-flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-indigo-600 hover:bg-indigo-700'>
                      <svg
                        xmlns='http://www.w3.org/2000/svg'
                        className='w-6 mr-1'
                        fill='none'
                        viewBox='0 0 24 24'
                        stroke='currentColor'
                        strokeWidth={2}>
                        <path
                          strokeLinecap='round'
                          strokeLinejoin='round'
                          d='M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1'
                        />
                      </svg>
                      Logout
                    </button>
                  </div>
                </div>
              </div>
            </Popover>
          </>
        ) : (
          <>
            <Popover className='relative bg-white '>
              <div className='max-w-7xl mx-auto px-4 sm:px-6'>
                <div className='flex justify-between items-center border-b-2 border-gray-100 py-6 md:justify-start md:space-x-10'>
                  <div className='flex flex-1 lg:w-0'>
                    <Link
                      to='/'
                      className='whitespace-nowrap font-medium text-gray-500 flex hover:text-gray-900 text-2xl'>
                      <svg
                        xmlns='http://www.w3.org/2000/svg'
                        className='w-7 mx-2'
                        fill='none'
                        viewBox='0 0 24 24'
                        stroke='currentColor'
                        strokeWidth={2}>
                        <path
                          strokeLinecap='round'
                          strokeLinejoin='round'
                          d='M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6'
                        />
                      </svg>
                      HOME
                    </Link>
                  </div>
                  {!isLoginOrRegisterPage && (
                    <div className='flex items-center justify-end flex-1 lg:w-0'>
                      <Link
                        to='/login'
                        className='whitespace-nowrap flex text-base font-medium text-gray-500 hover:text-gray-900'>
                        <svg
                          xmlns='http://www.w3.org/2000/svg'
                          className='h-6 w-6 mr-1'
                          fill='none'
                          viewBox='0 0 24 24'
                          stroke='currentColor'
                          strokeWidth={2}>
                          <path
                            strokeLinecap='round'
                            strokeLinejoin='round'
                            d='M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1'
                          />
                        </svg>
                        Login
                      </Link>
                      <Link
                        to='/register'
                        className='ml-8 whitespace-nowrap inline-flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-indigo-600 hover:bg-indigo-700'>
                        <svg
                          xmlns='http://www.w3.org/2000/svg'
                          className='w-5 mr-1'
                          fill='none'
                          viewBox='0 0 24 24'
                          stroke='currentColor'
                          strokeWidth={2}>
                          <path
                            strokeLinecap='round'
                            strokeLinejoin='round'
                            d='M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z'
                          />
                        </svg>
                        Register
                      </Link>
                    </div>
                  )}
                </div>
              </div>
            </Popover>
          </>
        )}
      </nav>
    </header>
  )
}

export default Header


homescreen before automated 'show my todos'

import React, { useState } from 'react'
import Todo from '../components/Todo'
import { useSelector, useDispatch } from 'react-redux'
import { userListTodos, newTodoAction } from '../actions/todoAction.js'
import { useNavigate } from 'react-router-dom'

const HomeScreen = () => {
  const [newTodo, setNewTodo] = useState('')

  const dispatch = useDispatch()
  const navigate = useNavigate() // initialize useNavigate

  const { userInfo } = useSelector((state) => state.userLogin)

  const todoUserList = useSelector((state) => state.todoUserList)
  const { loading, error, userTodos } = todoUserList

  const handleClick = (e) => {
    e.preventDefault()
    dispatch(userListTodos(userInfo._id))
  }

  const handleNewTodo = (e) => {
    e.preventDefault()
    dispatch(newTodoAction({ userId: userInfo._id, todoText: newTodo }))
    dispatch(userListTodos(userInfo._id))
  }

  const handleLoginClick = () => {
    navigate('/login') // navigate to the login screen
  }

  return (
    <div className='min-h-screen bg-gray-100'>
      <div
        style={{ padding: '10px' }}
        className='bg-gray-100 text-gray-800 antialiased px-4 flex justify-center sm:py-12'>
        <div className='relative sm:max-w-xl mx-auto text-center'>
          {userInfo && (
            <div>
              <div className='flex justify-center items-baseline'>
                <button
                  onClick={handleClick}
                  className='flex border-transparent shadow-sm hover:bg-indigo-700 mt-4 bg-indigo-500 text-white py-2 px-6 rounded-md'>
                  Show My Todos
                </button>
              </div>
            </div>
          )}

          <div className='h-1 bg-indigo-700 mt-2 rounded'></div>

          {!userInfo && (
            <h1 
              onClick={handleLoginClick} 
              className='cursor-pointer'
            >
              Login To Create and See your To-do list
            </h1>
          )}
          <div className='h-1 bg-indigo-700 mt-2 rounded'></div>
        </div>
      </div>
      {loading ? (
        <h2>Loading...</h2>
      ) : error ? (
        <h3>{error}</h3>
      ) : userTodos ? (
        <>
          <div className='pb-3 px-8'>
            <input
              placeholder='Enter New Todo'
              type='text'
              id='newTodo'
              name='newTodo'
              onChange={(e) => {
                setNewTodo(e.target.value)
              }}
              className='border h-5 px-3 py-5 mt-2 hover:outline-none focus:outline-none focus:ring-1 focus:ring-indigo-600 rounded-l-md'
            />
            <button
              onClick={handleNewTodo}
              type='submit'
              className='mt-3 ml-1 bg-indigo-500 text-white h-10 w-20 rounded-r-md'>
              Add Todo
            </button>
          </div>

          {userTodos.map((todo) => (
            <span key={todo._id}>
              <Todo todo={todo} />
              <br />
            </span>
          ))}
        </>
      ) : (
        <></>
      )}
    </div>
  )
}

export default HomeScreen


todojs before check for immediate response on button click for status change.

import React, { useState } from 'react'
import { Link } from 'react-router-dom'
import { useDispatch } from 'react-redux'
import axios from 'axios'
import { userListTodos } from '../actions/todoAction'

const Todo = ({ todo }) => {
  const dispatch = useDispatch()

  const [currentStatus] = useState(todo.status)
  const handleStatus = (e) => {
    e.preventDefault()
    axios.get(`/api/todos/status/${todo._id}/${!currentStatus}`)
    dispatch(userListTodos(todo.user))
    dispatch(userListTodos(todo.user))
  }

  const handleRemove = (e) => {
    e.preventDefault()
    axios.delete(`/api/todos/delete/${todo._id}`)
    dispatch(userListTodos(todo.user))
    dispatch(userListTodos(todo.user))
  }
  return (
    <>
      <form>
        <Link to={`/edit/${todo._id}/${todo.name}`}>
          <input
            className='placeholder-gray-600 font-sans border w-60 h-9 rounded-l-md p-2'
            type='text'
            placeholder={todo.name}
          />
        </Link>
        <button type='submit' onClick={handleStatus}>
          {todo.status ? (
            <svg
              xmlns='http://www.w3.org/2000/svg'
              className='text-green-500 h-7  w-7'
              fill='none'
              viewBox='0 0 24 24'
              stroke='currentColor'
              strokeWidth={2}>
              <path
                strokeLinecap='round'
                strokeLinejoin='round'
                d='M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z'
              />
            </svg>
          ) : (
            <svg
              xmlns='http://www.w3.org/2000/svg'
              className='text-blue-400 h-7 w-7'
              fill='none'
              viewBox='0 0 24 24'
              stroke='currentColor'
              strokeWidth={2}>
              <path
                strokeLinecap='round'
                strokeLinejoin='round'
                d='M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z'
              />
            </svg>
          )}
        </button>
        <button
          className=' text-pink-400  w-33 h-10 rounded-md p-1'
          type='submit'
          onClick={handleRemove}>
          <svg
            xmlns='http://www.w3.org/2000/svg'
            className='h-7 w-7'
            fill='none'
            viewBox='0 0 24 24'
            stroke='currentColor'
            strokeWidth={2}>
            <path
              strokeLinecap='round'
              strokeLinejoin='round'
              d='M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16'
            />
          </svg>
        </button>
      </form>
    </>
  )
}

export default Todo


before - homescreen change to handle immediate ui change in todo status

import React, { useState, useEffect } from 'react'
import Todo from '../components/Todo'
import { useSelector, useDispatch } from 'react-redux'
import { userListTodos, newTodoAction } from '../actions/todoAction.js'
import { useNavigate } from 'react-router-dom'

const HomeScreen = () => {
  const [newTodo, setNewTodo] = useState('')

  const dispatch = useDispatch()
  const navigate = useNavigate() // initialize useNavigate

  const { userInfo } = useSelector((state) => state.userLogin)

  const todoUserList = useSelector((state) => state.todoUserList)
  const { loading, error, userTodos } = todoUserList

  useEffect(() => {
    if (userInfo) {
      dispatch(userListTodos(userInfo._id))
    } else {
      navigate('/')
    }
  }, [dispatch, userInfo, navigate])

  const handleNewTodo = (e) => {
    e.preventDefault()
    dispatch(newTodoAction({ userId: userInfo._id, todoText: newTodo }))
    dispatch(userListTodos(userInfo._id))
  }

  return (
    <div className='min-h-screen bg-gray-100'>
      <div
        style={{ padding: '10px' }}
        className='bg-gray-100 text-gray-800 antialiased px-4 flex justify-center sm:py-12'>
        <div className='relative sm:max-w-xl mx-auto text-center'>
          <div className='h-1 bg-indigo-700 mt-2 rounded'></div>

          {!userInfo && (
            <h1 
              onClick={() => navigate('/login')} 
              className='cursor-pointer'
            >
              Login To Create and See your To-do list
            </h1>
          )}
          <div className='h-1 bg-indigo-700 mt-2 rounded'></div>
        </div>
      </div>
      {loading ? (
        <h2>Loading...</h2>
      ) : error ? (
        <h3>{error}</h3>
      ) : userTodos ? (
        <>
          <div className='pb-3 px-8'>
            <input
              placeholder='Enter New Todo'
              type='text'
              id='newTodo'
              name='newTodo'
              onChange={(e) => {
                setNewTodo(e.target.value)
              }}
              className='border h-5 px-3 py-5 mt-2 hover:outline-none focus:outline-none focus:ring-1 focus:ring-indigo-600 rounded-l-md'
            />
            <button
              onClick={handleNewTodo}
              type='submit'
              className='mt-3 ml-1 bg-indigo-500 text-white h-10 w-20 rounded-r-md'>
              Add Todo
            </button>
          </div>

          {userTodos.map((todo) => (
            <span key={todo._id}>
              <Todo todo={todo} />
              <br />
            </span>
          ))}
        </>
      ) : (
        <></>
      )}
    </div>
  )
}

export default HomeScreen

todo.js before they were centered horizontally

import React, { useState } from 'react'
import { Link } from 'react-router-dom'
import { useDispatch } from 'react-redux'
import axios from 'axios'
import { userListTodos } from '../actions/todoAction'

const Todo = ({ todo }) => {
  const dispatch = useDispatch()

  const [currentStatus] = useState(todo.status)
  const handleStatus = (e) => {
    e.preventDefault()
    axios.get(`/api/todos/status/${todo._id}/${!currentStatus}`)
    dispatch(userListTodos(todo.user))
    dispatch(userListTodos(todo.user))
  }

  const handleRemove = (e) => {
    e.preventDefault()
    axios.delete(`/api/todos/delete/${todo._id}`)
    dispatch(userListTodos(todo.user))
    dispatch(userListTodos(todo.user))
  }
  return (
    <>
      <form>
        <Link to={`/edit/${todo._id}/${todo.name}`}>
          <input
            className='placeholder-gray-600 font-sans border w-60 h-9 rounded-l-md p-2'
            type='text'
            placeholder={todo.name}
          />
        </Link>
        <button type='submit' onClick={handleStatus}>
          {todo.status ? (
            <svg
              xmlns='http://www.w3.org/2000/svg'
              className='text-green-500 h-7  w-7'
              fill='none'
              viewBox='0 0 24 24'
              stroke='currentColor'
              strokeWidth={2}>
              <path
                strokeLinecap='round'
                strokeLinejoin='round'
                d='M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z'
              />
            </svg>
          ) : (
            <svg
              xmlns='http://www.w3.org/2000/svg'
              className='text-blue-400 h-7 w-7'
              fill='none'
              viewBox='0 0 24 24'
              stroke='currentColor'
              strokeWidth={2}>
              <path
                strokeLinecap='round'
                strokeLinejoin='round'
                d='M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z'
              />
            </svg>
          )}
        </button>
        <button
          className=' text-pink-400  w-33 h-10 rounded-md p-1'
          type='submit'
          onClick={handleRemove}>
          <svg
            xmlns='http://www.w3.org/2000/svg'
            className='h-7 w-7'
            fill='none'
            viewBox='0 0 24 24'
            stroke='currentColor'
            strokeWidth={2}>
            <path
              strokeLinecap='round'
              strokeLinejoin='round'
              d='M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16'
            />
          </svg>
        </button>
      </form>
    </>
  )
}

export default Todo











